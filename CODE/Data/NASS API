import urllib.request
import nass
from requests.utils import requote_uri
import urllib.parse

class c_usda_quick_stats:

    def __init__(self):

        # Set the USDA QuickStats API key, API base URL, and output file path where CSV files will be written. 

        self.api_key = '9F00FCDB-9E20-3490-9E74-F4F3F5D51BC5'

        self.base_url_api_get = 'http://quickstats.nass.usda.gov/api/api_GET/?key=' + self.api_key + '&'

        self.output_file_path = r'c:\\usda_quickstats_files\\'

    def get_data(self, parameters, file_name):

        # Call the api_GET api with the specified parameters. 
        # Write the CSV data to the specified output file.

        # Create the full URL and retrieve the data from the Quick Stats server.
        
        full_url = self.base_url_api_get + parameters
        s_result = urllib.request.urlopen(full_url)
        s_text = s_result.read().decode('utf-8')

        # Create the output file and write the CSV data records to the file.

        s_file_name = self.output_file_path + file_name + ".csv"
        o_file = open(s_file_name, "w", encoding="utf8")
        o_file.write(s_text)
        o_file.close()
        
### setting parameters

parameters1 =    'source_desc=SURVEY' +  \
                '&sector_desc=CROPS' + \
                '&' + urllib.parse.quote('group_desc=FIELD CROPS') + \
                '&commodity_desc=CORN' + \
                '&statisticcat_desc=YIELD' + \
                '&' + urllib.parse.quote('short_desc=CORN, GRAIN - YIELD, MEASURED IN BU / ACRE') + \
                '&year__GE=2012' + \
                '&agg_level_desc=COUNTY' + \
                '&freq_desc=ANNUAL' + \
                '&reference_period_desc=YEAR' + \
                '&format=CSV'

parameters2 =    'source_desc=SURVEY' +  \
                '&sector_desc=CROPS' + \
                '&' + urllib.parse.quote('group_desc=FIELD CROPS') + \
                '&commodity_desc=CORN' + \
                '&' + urllib.parse.quote('statisticcat_desc=AREA HARVESTED') + \
                '&' + urllib.parse.quote('short_desc=CORN, GRAIN - ACRES HARVESTED') + \
                '&unit_desc=ACRES' + \
                '&domain_desc=TOTAL' + \
                '&agg_level_desc=COUNTY' + \
                '&year__GE=2012' + \
                '&freq_desc=ANNUAL' + \
                '&reference_period_desc=YEAR' + \
                '&format=CSV'

parameters3 =    'source_desc=SURVEY' +  \
                '&sector_desc=CROPS' + \
                '&' + urllib.parse.quote('group_desc=FIELD CROPS') + \
                '&commodity_desc=CORN' + \
                '&' + urllib.parse.quote('short_desc=CORN, GRAIN - PRICE RECEIVED, MEASURED IN $ / BU') + \
                '&year__GE=2012' + \
                '&agg_level_desc=STATE' + \
                '&freq_desc=ANNUAL' + \
                '&reference_period_desc=YEAR' + \
                '&format=CSV'

parameters4 =    'source_desc=SURVEY' +  \
                '&sector_desc=ECONOMICS' + \
                '&commodity_desc=RENT' + \
                '&' + urllib.parse.quote('short_desc=RENT, CASH, CROPLAND, IRRIGATED - EXPENSE, MEASURED IN $ / ACRE') + \
                '&year__GE=2012' + \
                '&agg_level_desc=COUNTY' + \
                '&freq_desc=ANNUAL' + \
                '&reference_period_desc=YEAR' + \
                '&format=CSV'

stats = c_usda_quick_stats()


s_json = stats.get_data(parameters1, 'county_corn_yield')
s_json = stats.get_data(parameters2, 'county_corn_total_acres')
s_json = stats.get_data(parameters3, 'state_corn_price')
s_json = stats.get_data(parameters4, 'county_land_rental_price')
